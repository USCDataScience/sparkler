---
# Source: sparkler/templates/deployment.yaml
---
apiVersion: v1
data:
  solrHome: /store/data
  solrHost: solr-service
  solrLogsDir: /store/logs
  solrPort: "32080"
  zkHost: zookeeper-service:32181
kind: ConfigMap
metadata:
  name: solr-config
---
apiVersion: v1
data:
  zooDataDir: /store/data
  zooDataLogDir: /store/datalog
  zooLogDir: /store/logs
  zooMyId: "1"
  zooPort: "32181"
kind: ConfigMap
metadata:
  name: zookeeper-config
---
 apiVersion: extensions/v1beta1
 kind: Deployment
 metadata:
   name: fantastic-anaconda-sparkler
 spec:
   replicas: 3
   template:
     metadata:
       labels:
         app: sparkler
     spec:
       containers:
         - name: sparkler
           image: buggtb/sparkler-standalone:latest
           command: ["tail", "-f", "/dev/null"]
---
 apiVersion: v1
 kind: PersistentVolume
 metadata:
   name: zookeeper-volume
 spec:
   storageClassName: manual
   accessModes:
     - ReadWriteOnce
   capacity:
     storage: 5Gi
   hostPath:
     path: "/data/zookeeper"
---
 apiVersion: v1
 kind: PersistentVolume
 metadata:
   name: solr-volume
 spec:
   storageClassName: manual
   accessModes:
     - ReadWriteOnce
   capacity:
     storage: 5Gi
   hostPath:
     path: "/data/solr"
---
 apiVersion: v1
 kind: PersistentVolume
 metadata:
   name: solr-configset-volume
 spec:
   storageClassName: manual
   accessModes:
     - ReadWriteOnce
   capacity:
     storage: 1Gi
   hostPath:
     path: "/data/solr-configset"
---
 kind: PersistentVolumeClaim
 apiVersion: v1
 metadata:
   name: task-solr-configset-pv-claim
 spec:
   storageClassName: manual
   accessModes:
     - ReadWriteOnce
   resources:
     requests:
       storage: 1Gi
---
 kind: PersistentVolumeClaim
 apiVersion: v1
 metadata:
   name: task-zookeeper-pv-claim
 spec:
   storageClassName: manual
   accessModes:
     - ReadWriteOnce
   resources:
     requests:
       storage: 5Gi
---
 kind: PersistentVolumeClaim
 apiVersion: v1
 metadata:
   name: task-solr-pv-claim
 spec:
   storageClassName: manual
   accessModes:
     - ReadWriteOnce
   resources:
     requests:
       storage: 5Gi
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: zookeeper-ss
spec:
  selector:
    matchLabels:
      app: zookeeper-app
  serviceName: "zookeeper-service"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: zookeeper-app
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
      - name: volzookeeper
        persistentVolumeClaim:
          claimName: task-zookeeper-pv-claim
      containers:
      - name: zookeeper
        image: zookeeper:latest
        volumeMounts:
        - name: volzookeeper
          mountPath: /store
        ports:
        - name: zookeeper-port
          containerPort: 2181
        env:
          - name: ZOO_MY_ID
            valueFrom:
              configMapKeyRef:
                name: zookeeper-config
                key: zooMyId
          - name: ZOO_LOG_DIR
            valueFrom:
              configMapKeyRef:
                name: zookeeper-config
                key: zooLogDir
          - name: ZOO_DATA_DIR
            valueFrom:
              configMapKeyRef:
                name: zookeeper-config
                key: zooDataDir
          - name: ZOO_DATA_LOG_DIR
            valueFrom:
              configMapKeyRef:
                name: zookeeper-config
                key: zooDataLogDir
          - name: ZOO_PORT
            valueFrom:
              configMapKeyRef:
                name: zookeeper-config
                key: zooPort
      initContainers:
      - name: init-zookeeper-data
        image: busybox
        command: ['sh', '-c', 'mkdir -p /store/data && chown 1000:1000 /store/data']
        volumeMounts:
        - name: volzookeeper
          mountPath: /store
      - name: init-zookeeper-logs
        image: busybox
        command: ['sh', '-c', 'mkdir -p /store/logs && chown 1000:1000 /store/logs']
        volumeMounts:
        - name: volzookeeper
          mountPath: /store
      - name: init-zookeeper-datalog
        image: busybox
        command: ['sh', '-c', 'mkdir -p /store/datalog && chown 1000:1000 /store/datalog']
        volumeMounts:
        - name: volzookeeper
          mountPath: /store
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
spec:
  ports:
  - port: 32181
    targetPort: 32181
    nodePort: 32181
    protocol: TCP
  selector:
    app: zookeeper-app
  type: NodePort
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: solr-ss
spec:
  selector:
    matchLabels:
      app: solr-app
  serviceName: "solr-service"
  replicas: 1
  template:
    metadata:
      labels:
        app: solr-app
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
      - name: volsolr
        persistentVolumeClaim:
          claimName: task-solr-pv-claim
      - name: volconfigset
        persistentVolumeClaim:
          claimName: task-solr-configset-pv-claim
      containers:
      - name: solr
        image: solr:latest
        volumeMounts:
        - name: volsolr
          mountPath: /store
        - name: volconfigset
          mountPath: /opt/solr/server/solr/configsets/
        ports:
        - name: solr-port
          containerPort: 2181
        env:
          - name: SOLR_HOME
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: solrHome
          - name: SOLR_PORT
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: solrPort
          - name: ZK_HOST
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: zkHost
          - name: SOLR_HOST
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: solrHost
          - name: SOLR_LOGS_DIR
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: solrLogsDir
      initContainers:
      - name: init-solr-data
        image: busybox
        command: ['sh', '-c', 'mkdir -p /store/data && chown 8983:8983 /store/data']
        volumeMounts:
        - name: volsolr
          mountPath: /store
      - name: init-solr-logs
        image: busybox
        command: ['sh', '-c', 'mkdir -p /store/logs && chown 8983:8983 /store/logs']
        volumeMounts:
        - name: volsolr
          mountPath: /store
      - name: init-solr-xml
        image: solr:latest
        command: ['sh', '-c', '[ ! -f /store/data/solr.xml ] && cp /opt/solr/server/solr/solr.xml /store/data/solr.xml || true']
        volumeMounts:
        - name: volsolr
          mountPath: /store
      - name: init-solr-configset
        image: buggtb/sparkler-init:latest
        volumeMounts:
        - name: volconfigset
          mountPath: /solr
---
apiVersion: v1
kind: Service
metadata:
  name: solr-service
spec:
  ports:
  - port: 32080
    targetPort: 32080
    nodePort: 32080
    protocol: TCP
  selector:
    app: solr-app
  type: NodePort

