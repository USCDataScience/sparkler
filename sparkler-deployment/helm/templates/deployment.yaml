---
apiVersion: v1
data:
  solrHome: /store/data
  solrHost: solr-service
  solrLogsDir: /store/logs
  solrPort: "{{ .Values.solrCluster.port }}"
  zkHost: zookeeper-service:{{ .Values.zookeeperCluster.port }}
kind: ConfigMap
metadata:
  name: solr-config
---
apiVersion: v1
data:
  zooDataDir: /store/data
  zooDataLogDir: /store/datalog
  zooLogDir: /store/logs
  zooMyId: "{{ .Values.zookeeperCluster.id }}"
  zooPort: "{{ .Values.zookeeperCluster.port }}"
kind: ConfigMap
metadata:
  name: zookeeper-config
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
   name: {{ template "sparkler.fullname" . }}
spec:
   replicas: {{ .Values.sparklerCluster.settings.replicaCount }}
   template:
     metadata:
       labels:
         app: {{ template "sparkler.name" . }}
     spec:
       containers:
         - name: sparkler
           image: {{ .Values.sparklerCluster.image.name }}:{{ .Values.sparklerCluster.image.dockerTag }}
           command: ["tail", "-f", "/dev/null"]
---
apiVersion: v1
kind: PersistentVolume
metadata:
   name: zookeeper-volume
spec:
   storageClassName: {{ .Values.zookeeperCluster.storage.className }}
   accessModes:
     - ReadWriteOnce
   capacity:
     storage: {{ .Values.zookeeperCluster.storage.capacity }}
   hostPath:
     path: {{ .Values.zookeeperCluster.storage.path | quote }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
   name: solr-volume
spec:
   storageClassName: {{ .Values.solrCluster.solr.storage.className }}
   accessModes:
     - ReadWriteOnce
   capacity:
     storage: {{ .Values.solrCluster.solr.storage.capacity }}
   hostPath:
     path: {{ .Values.solrCluster.solr.storage.path | quote }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
   name: solr-configset-volume
spec:
   storageClassName: {{ .Values.solrCluster.configset.storage.className }}
   accessModes:
     - ReadWriteOnce
   capacity:
     storage: {{ .Values.solrCluster.configset.storage.capacity }}
   hostPath:
     path: {{ .Values.solrCluster.configset.storage.path | quote }}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
   name: task-solr-configset-pv-claim
spec:
   storageClassName: {{ .Values.solrCluster.configset.storage.className }}
   accessModes:
     - ReadWriteOnce
   resources:
     requests:
       storage: {{ .Values.solrCluster.configset.storage.capacity }}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
   name: task-zookeeper-pv-claim
spec:
   storageClassName: {{ .Values.zookeeperCluster.storage.className }}
   accessModes:
     - ReadWriteOnce
   resources:
     requests:
       storage: {{ .Values.zookeeperCluster.storage.capacity }}
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
   name: task-solr-pv-claim
spec:
   storageClassName: {{ .Values.solrCluster.solr.storage.className }}
   accessModes:
     - ReadWriteOnce
   resources:
     requests:
       storage: {{ .Values.solrCluster.solr.storage.capacity }}
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: zookeeper-ss
spec:
  selector:
    matchLabels:
      app: zookeeper-app
  serviceName: "zookeeper-service"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: zookeeper-app
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
      - name: volzookeeper
        persistentVolumeClaim:
          claimName: task-zookeeper-pv-claim
      containers:
      - name: zookeeper
        image: {{ .Values.zookeeperCluster.image.name }}:{{ .Values.zookeeperCluster.image.dockerTag }}
        volumeMounts:
        - name: volzookeeper
          mountPath: /store
        ports:
        - name: zookeeper-port
          containerPort: 2181
        env:
          - name: ZOO_MY_ID
            valueFrom:
              configMapKeyRef:
                name: zookeeper-config
                key: zooMyId
          - name: ZOO_LOG_DIR
            valueFrom:
              configMapKeyRef:
                name: zookeeper-config
                key: zooLogDir
          - name: ZOO_DATA_DIR
            valueFrom:
              configMapKeyRef:
                name: zookeeper-config
                key: zooDataDir
          - name: ZOO_DATA_LOG_DIR
            valueFrom:
              configMapKeyRef:
                name: zookeeper-config
                key: zooDataLogDir
          - name: ZOO_PORT
            valueFrom:
              configMapKeyRef:
                name: zookeeper-config
                key: zooPort
      initContainers:
      - name: init-zookeeper-data
        image: busybox
        command: ['sh', '-c', 'mkdir -p /store/data && chown 1000:1000 /store/data']
        volumeMounts:
        - name: volzookeeper
          mountPath: /store
      - name: init-zookeeper-logs
        image: busybox
        command: ['sh', '-c', 'mkdir -p /store/logs && chown 1000:1000 /store/logs']
        volumeMounts:
        - name: volzookeeper
          mountPath: /store
      - name: init-zookeeper-datalog
        image: busybox
        command: ['sh', '-c', 'mkdir -p /store/datalog && chown 1000:1000 /store/datalog']
        volumeMounts:
        - name: volzookeeper
          mountPath: /store
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
spec:
  ports:
  - port: {{ .Values.zookeeperCluster.port }}
    targetPort: {{ .Values.zookeeperCluster.port }}
    nodePort: {{ .Values.zookeeperCluster.port }}
    protocol: TCP
  selector:
    app: zookeeper-app
  type: NodePort
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: solr-ss
spec:
  selector:
    matchLabels:
      app: solr-app
  serviceName: "solr-service"
  replicas: {{ .Values.solrCluster.settings.replicaCount }}
  template:
    metadata:
      labels:
        app: solr-app
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
      - name: volsolr
        persistentVolumeClaim:
          claimName: task-solr-pv-claim
      - name: volconfigset
        persistentVolumeClaim:
          claimName: task-solr-configset-pv-claim
      containers:
      - name: solr
        image: {{ .Values.solrCluster.image.name }}:{{ .Values.solrCluster.image.dockerTag }}
        volumeMounts:
        - name: volsolr
          mountPath: /store
        - name: volconfigset
          mountPath: /opt/solr/server/solr/configsets/
        ports:
        - name: solr-port
          containerPort: 2181
        env:
          - name: SOLR_HOME
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: solrHome
          - name: SOLR_PORT
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: solrPort
          - name: ZK_HOST
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: zkHost
          - name: SOLR_HOST
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: solrHost
          - name: SOLR_LOGS_DIR
            valueFrom:
              configMapKeyRef:
                name: solr-config
                key: solrLogsDir
      initContainers:
      - name: init-solr-data
        image: busybox
        command: ['sh', '-c', 'mkdir -p /store/data && chown 8983:8983 /store/data']
        volumeMounts:
        - name: volsolr
          mountPath: /store
      - name: init-solr-logs
        image: busybox
        command: ['sh', '-c', 'mkdir -p /store/logs && chown 8983:8983 /store/logs']
        volumeMounts:
        - name: volsolr
          mountPath: /store
      - name: init-solr-xml
        image: solr:latest
        command: ['sh', '-c', '[ ! -f /store/data/solr.xml ] && cp /opt/solr/server/solr/solr.xml /store/data/solr.xml || true']
        volumeMounts:
        - name: volsolr
          mountPath: /store
      - name: init-solr-configset
        image: {{ .Values.sparklerInit.image.name }}:{{ .Values.sparklerInit.image.dockerTag }}
        volumeMounts:
        - name: volconfigset
          mountPath: /solr
---
apiVersion: v1
kind: Service
metadata:
  name: solr-service
spec:
  ports:
  - port: {{ .Values.solrCluster.port }}
    targetPort: {{ .Values.solrCluster.port }}
    nodePort: {{ .Values.solrCluster.port }}
    protocol: TCP
  selector:
    app: solr-app
  type: NodePort
